{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AAA+D;AAER;AACR;AACe;AACI;;;AAClE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,wEAAc,EAAE;IACvC,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,uEAAe,EAAE;IAClD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2EAAiB,EAAE;CACnD,CAAC;AAWK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHARlB;YACP,yDAAY;YACZ,iEAAoB,CAAC,MAAM,EAAE;gBAC3B,iBAAiB,EAAE,iBAAiB;aACrC,CAAC;SACH,EACS,yDAAY;mIAEX,gBAAgB,cAPzB,yDAAY,wEAKJ,yDAAY;;;;;;;;;;;;;;;;;;;ACXjB,MAAM,YAAY;;wEAAZ,YAAY;0GAAZ,YAAY;QCRzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkC;AACX;AAEI;AACQ;AACT;AACD;AACT;AACgC;AAChB;AACR;AACR;AACmB;AACJ;AACjB;;;AAuBtC,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YAVJ;YACP,yFAAkC,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;YAC1D,iEAAgB;YAChB,yFAAuB;YACvB,kEAAa;YACb,0DAAY;YACZ,6EAAkB;YAClB,oEAAc;YACd,wDAAW;SACZ;mIAIU,SAAS,mBApBlB,wDAAY;QACZ,wEAAc;QACd,+DAAa;QACb,0EAAgB;QAChB,2EAAiB;QACjB,uEAAe,mFAIf,iEAAgB;QAChB,yFAAuB;QACvB,kEAAa;QACb,0DAAY;QACZ,6EAAkB;QAClB,oEAAc;QACd,wDAAW;;;;;;;;;;;;;;;;;;;;;ACzBR,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kFALU,iBAAiB;+GAAjB,iBAAiB;QCP9B,oFAAkC;QAChC,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,sEAAkB;QACpB,4DAAiB;QACjB,oFAAkC;QAChC,4EAAW;QAAA,iEAAM;QAAA,4DAAY;QAC/B,4DAAiB;QACjB,oFAAkC;QAChC,4EAAW;QAAA,mEAAQ;QAAA,4DAAY;QAC/B,0EAA8B;QAChC,4DAAiB;;;;;;;;;;;;;;;;ACRV,MAAM,OAAO,GAAgB;IAClC;QACE,IAAI,EAAE;YACJ,KAAK,EAAE,gBAAgB;YACvB,MAAM,EAAE,YAAY;YACpB,KAAK,EACH,wIAAwI;YAC1I,QAAQ,EAAE,+CAA+C;YACzD,IAAI,EAAE,UAAU;YAChB,eAAe,EAAE,MAAM;SACxB;QACD,SAAS,EAAE;YACT;gBACE,QAAQ,EAAE,iCAAiC;gBAC3C,OAAO,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC;gBAC/C,OAAO,EAAE,UAAU;aACpB;YACD;gBACE,QAAQ,EAAE,kDAAkD;gBAC5D,KAAK,EACH,6HAA6H;gBAC/H,OAAO,EAAE;oBACP,mBAAmB;oBACnB,mBAAmB;oBACnB,gBAAgB;oBAChB,iBAAiB;iBAClB;gBACD,OAAO,EAAE,mBAAmB;aAC7B;YACD;gBACE,QAAQ,EAAE,qBAAqB;gBAC/B,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC;gBAClD,OAAO,EAAE,UAAU;aACpB;YACD;gBACE,QAAQ,EAAE,gCAAgC;gBAC1C,OAAO,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,aAAa,EAAE,UAAU,CAAC;gBACxD,OAAO,EAAE,OAAO;aACjB;YACD;gBACE,QAAQ,EAAE,wCAAwC;gBAClD,KAAK,EAAE,+DAA+D;gBACtE,OAAO,EAAE;oBACP,YAAY;oBACZ,UAAU;oBACV,gBAAgB;oBAChB,iBAAiB;iBAClB;gBACD,OAAO,EAAE,iBAAiB;aAC3B;SACF;QACD,MAAM,EAAE;YACN;gBACE,MAAM,EAAE,YAAY;gBACpB,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE,CAAC;aACR;YACD;gBACE,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE,CAAC;aACR;SACF;QACD,KAAK,EAAE;YACL;gBACE,MAAM,EAAE,YAAY;gBACpB,KAAK,EAAE,GAAG;aACX;YACD;gBACE,MAAM,EAAE,SAAS;gBACjB,KAAK,EAAE,GAAG;aACX;SACF;KACF;CACF,CAAC;;;;;;;;;;;;;;;;;;;AC1E8C;;;;;ICU9C,0EAAgD;;ADF3C,MAAM,eAAe;IAI1B;QAHA,SAAI,GAAqB,qEAAoB,CAAC;QAC9C,aAAQ,GAAG,gEAAe,CAAC;QAC3B,eAAU,GAAG,KAAK,CAAC;IACJ,CAAC;IAEhB,QAAQ,KAAU,CAAC;;8EANR,eAAe;6GAAf,eAAe;QCV5B,6EAAsB;QACpB,yEAAQ;QACN,oEAAgE;QAChE,yEAA4B;QAC1B,qEAAI;QAAA,uDAAoB;QAAA,4DAAK;QAC7B,uEAAW;QAAA,uEAAM;QAAA,uDAAsB;QAAA,4DAAO;QAAA,gEAAM;QACpD,wDACA;QAAA,iEAAM;QACN,6EAAoC;QAA5B,yJAAsB,IAAI,IAAC;QAAC,iEAAK;QAAA,4DAAS;QACpD,4DAAM;QACR,4DAAS;QAET,+HAAgD;QAClD,4DAAU;;QAXD,0DAA0B;QAA1B,2JAA0B;QAAC,iGAA6B;QAEvD,0DAAoB;QAApB,mFAAoB;QACP,0DAAsB;QAAtB,8FAAsB;QACvC,0DACA;QADA,iGACA;QAKW,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;;;;;;;;ACXiB;;;;;;ICW1C,uEAGG;IAAA,qEAAU;IAAA,4DACZ;;;IAFC,wFAA6B;;;IAG/B,uEAGG;IAAA,oFAAyB;IAAA,4DAC3B;;;IAFC,0FAA+B;;;IAGjC,uEAGG;IAAA,0EAAe;IAAA,4DACjB;;;IAFC,wFAA6B;;;;IAI/B,uEAA6B;IAC3B,+EACG;IAAA,+DAAI;IAAA,4DACN;IAAA,4DACF;;;;IAHW,0DAA4D;IAA5D,2LAA4D;;;;IA5B9E,6EAAsD;IACpD,oEAAwC;IACxC,yEAA+B;IAC7B,qEAAI;IACF,uDACA;IAAA,0EAA+C;IAAC,+DAAG;IAAA,4DAAO;IAC1D,0EAA8B;IAAA,uDAAoB;IAAA,4DAAO;IAC3D,4DAAK;IACL,0EAA4B;IAC1B,wDACA;IACA,uHAIC;IACD,uHAIC;IACD,uHAIC;IACD,iEAAM;IACN,uHAIC;IACH,4DAAO;IAEP,qEAAG;IACD,wDACA;IAAA,iEAAM;IACR,4DAAI;IAEJ,2EAA8B;IAC5B,8EAGC;IACC,kEAAK;IAAA,4DACN;IAAA,0EAAQ;IAAA,uEAAW;IAAA,4DAAS;IAAA,0EAAQ;IAAA,uEAAW;IAAA,4DAAS;IAC3D,4DAAM;IACR,4DAAM;IACR,4DAAU;;;;IA/CH,0DAAyB;IAAzB,yJAAyB;IAG1B,0DACA;IADA,4FACA;IAC8B,0DAAoB;IAApB,kFAAoB;IAGlD,0DACA;IADA,2FACA;IAEG,0DAAwC;IAAxC,uGAAwC;IAKxC,0DAA0C;IAA1C,yGAA0C;IAK1C,0DAAwC;IAAxC,uGAAwC;IAKvB,0DAAO;IAAP,gFAAO;IAQ3B,0DACA;IADA,+FACA;IAKE,0DAA+B;IAA/B,8IAA+B;;ADjClC,MAAM,aAAa;IACxB;QACA,SAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvB,aAAQ,GAAG;YACT,IAAI,EAAE,QAAQ;YACd,MAAM,EAAE,QAAQ;YAChB,IAAI,EAAE,KAAK;SACZ,CAAC;QASF,SAAI,GAAgB,wDAAO,CAAC;IAfb,CAAC;IAOhB,SAAS;QACP,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;QAC5C,IAAI,SAAS,GAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAO,EAAE;YAC5D,OAAO,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;;0EAnBU,aAAa;2GAAb,aAAa;QCT1B,6EAAyB;QACvB,mHAgDU;QACZ,4DAAU;;QAjDqC,0DAAO;QAAP,6EAAO;;;;;;;;;;;;;;;;;;;;;;;;;;ACM/C,MAAM,cAAc;IAEzB;QADA,eAAU,GAAG,0CAA0C,CAAC;IACzC,CAAC;IAChB,IAAI,CAAC,CAAM;QACT,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,OAAO,GAAG,EAAE,MACjC,CAAC,CAAC,OAAO,GAAG,EACd,mCAAmC,CAAC;IACtC,CAAC;IACD,QAAQ,KAAU,CAAC;;4EARR,cAAc;4GAAd,cAAc;QCP3B,4EAAkD;QAA3B,oJAAa,gBAAY,IAAC;QAC/C,yEAA2B;QACzB,0EAA4D;QAAA,6DAAE;QAAA,4DAAO;QAAA,+DACvE;QAAA,4DAAM;QACN,yEAA6B;QAC3B,4EAA+B;QAC7B,wEACA;QAAA,gEAAM;QACN,2EAAU;QAAA,kEAAM;QAAA,4DAAW;QAAA,4DAC5B;QAAA,6EAIA;QACC,wEACA;QAAA,iEAAM;QACN,4EAAU;QAAA,oEAAQ;QAAA,4DAAW;QAAA,4DAC9B;QAAA,6EAA6D;QAC5D,wEAAW;QAAA,iEAAM;QACjB,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAC7B,4DAAS;QACX,4DAAM;QACR,4DAAS;QACT,uEAAqB;;QArBU,0DAAgC;QAAhC,wFAAgC;QASzD,0DAA+B;QAA/B,6IAA+B;QAMD,0DAA6B;QAA7B,6IAA6B;;;;;;;;;;;;;;;;;;;ACjBf;;;;ICS9C,oEAAoD;;;IAA9B,oJAAoB;;;;;IAExC,4EAMC;IAJC,mbAAS,yBAAY,IAAC;IAKtB,uDACF;IAAA,4DAAS;;;;;IALP,yNAEE;IAEF,0DACF;IADE,kFACF;;;;IAlBJ,yEAMC;IACC,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,kHAAoD;IACpD,yEAA2B;IACzB,wHAQS;IACX,4DAAM;IACR,4DAAM;;;;IAjBJ,sLAEE;IAEE,0DAAiB;IAAjB,+EAAiB;IACf,0DAAc;IAAd,6EAAc;IAGA,0DAAa;IAAb,kFAAa;;ADD9B,MAAM,gBAAgB;IAO3B;QANA,SAAI,GAAqB,qEAAoB,CAAC;QAC9C,aAAQ,GAAG,gEAAe,CAAC;QAC3B,iBAAY,GAAkB,EAAE,CAAC;QACjC,iBAAY,GAAkB,EAAE,CAAC;QACjC,kBAAa,GAA4B,EAAE,CAAC;QAC5C,aAAQ,GAAW,CAAC,CAAC;IACN,CAAC;IAChB,gBAAgB;IAChB,IAAI,CAAC,GAAW,EAAE,CAAS;QACzB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QAC3B,iCAAiC;IACnC,CAAC;IACD,mBAAmB;IACnB,OAAO;QACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;YAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;YAC9C,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC9D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;SAC/B;IACH,CAAC;IACD,0BAA0B;IAE1B,UAAU;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;aACnE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;aAC/B,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IACD,4CAA4C;IAC5C,OAAO;QACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACjC;QACD,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IACD,wCAAwC;IACxC,KAAK;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;gBACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3D;SACF;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IACD,+BAA+B;IAC/B,QAAQ,CAAC,GAAW,EAAE,MAAc,EAAE,OAAe;QACnD,IAAI,GAAG,KAAK,OAAO,EAAE;YACnB,OAAO,OAAO,CAAC;SAChB;QACD,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,OAAO,IAAI,OAAO,KAAK,SAAS,EAAE;YAC9D,OAAO,KAAK,CAAC;SACd;QACD,IAAI,GAAG,KAAK,MAAM,EAAE;YAClB,OAAO,SAAS,CAAC;SAClB;IACH,CAAC;IACD,QAAQ;QACN,0BAA0B;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;;gFAnEU,gBAAgB;8GAAhB,gBAAgB;QCX7B,yEAA2B;QACzB,4GAoBM;QACR,4DAAM;QACN,4EAA0B;QAAlB,wIAAS,WAAO,IAAC;QAAC,mEAAQ;QAAA,4DAAS;QAC3C,4EAA+B;QAAvB,wIAAS,gBAAY,IAAC;QAAC,qEAAU;QAAA,4DAAS;;QArB/B,0DAAS;QAAT,6EAAS;;;;;;;;;;;;;;;;ACH5B,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,SAAS,SAAS;IAChB,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;SAClD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC,CAAC;AAAA,CAAC;AAGF,IAAI,QAAQ,CAAC,UAAU,KAAK,UAAU,EAAE;IACtC,SAAS,EAAE,CAAC;CACb;KAAM;IACL,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;CAC1D","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/creating/creating.component.ts","./src/app/creating/creating.component.html","./src/app/data/examples-quiz.ts","./src/app/go-quiz/go-quiz.component.ts","./src/app/go-quiz/go-quiz.component.html","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/pages/start/start.component.ts","./src/app/pages/start/start.component.html","./src/app/quiz-one/quiz-one.component.ts","./src/app/quiz-one/quiz-one.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { StartComponent } from './pages/start/start.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { GoQuizComponent } from './go-quiz/go-quiz.component';\nimport { CreatingComponent } from './creating/creating.component';\nconst routes: Routes = [\n  { path: '', component: StartComponent },\n  { path: 'quiz-one/1', component: GoQuizComponent },\n  { path: 'creating', component: CreatingComponent },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes, {\n      initialNavigation: 'enabledBlocking',\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n","import { QuizOneComponent } from './quiz-one/quiz-one.component';\nimport { ListComponent } from './list/list.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StartComponent } from './pages/start/start.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\nimport { CreatingComponent } from './creating/creating.component';\nimport { GoQuizComponent } from './go-quiz/go-quiz.component';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartComponent,\n    ListComponent,\n    QuizOneComponent,\n    CreatingComponent,\n    GoQuizComponent,\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-creating',\n  templateUrl: './creating.component.html',\n  styleUrls: ['./creating.component.less']\n})\nexport class CreatingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Input</mat-label>\n  <input matInput />\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Select</mat-label>\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Textarea</mat-label>\n  <textarea matInput></textarea>\n</mat-form-field>\n","import { Quiz } from './data-type';\r\n\r\nexport const quizzes: Array<Quiz> = [\r\n  {\r\n    meta: {\r\n      title: 'Front-end Quiz',\r\n      author: 'Front-Flex',\r\n      image:\r\n        'https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Unofficial_JavaScript_logo_2.svg/1200px-Unofficial_JavaScript_logo_2.svg.png',\r\n      describe: 'Simple quiz for beginner front-end developers',\r\n      date: '1/6/2022',\r\n      levelDifficulty: 'easy',\r\n    },\r\n    questions: [\r\n      {\r\n        question: 'What is not a css preprocessor?',\r\n        answers: ['Sass', 'Stylus', 'Tailwind', 'Less'],\r\n        correct: 'Tailwind',\r\n      },\r\n      {\r\n        question: 'What notation can be used angular interpolation?',\r\n        image:\r\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/800px-Angular_full_color_logo.svg.png',\r\n        answers: [\r\n          '[(interpolation)]',\r\n          '{{interpolation}}',\r\n          '@interpolation',\r\n          '{interpolation}',\r\n        ],\r\n        correct: '{{interpolation}}',\r\n      },\r\n      {\r\n        question: 'Choose no framework',\r\n        answers: ['Remix', 'NuxtJS', 'Prettier', 'Vue.js'],\r\n        correct: 'Prettier',\r\n      },\r\n      {\r\n        question: 'Find example angular directive',\r\n        answers: ['*NgIf', '*NgxFor', '*NpmAngular', '*NgSwift'],\r\n        correct: '*NgIf',\r\n      },\r\n      {\r\n        question: 'What command will create a new branch?',\r\n        image: 'https://git-scm.com/images/logos/downloads/Git-Icon-1788C.png',\r\n        answers: [\r\n          'git branch',\r\n          'git init',\r\n          'git new branch',\r\n          'git checkout -b',\r\n        ],\r\n        correct: 'git checkout -b',\r\n      },\r\n    ],\r\n    rating: [\r\n      {\r\n        author: 'Front-Flex',\r\n        comment: 'Well, not bad',\r\n        rate: 3,\r\n      },\r\n      {\r\n        author: 'FrontJS',\r\n        comment: 'Very Simple!',\r\n        rate: 5,\r\n      },\r\n    ],\r\n    score: [\r\n      {\r\n        winner: 'Front-Flex',\r\n        score: 275,\r\n      },\r\n      {\r\n        winner: 'FrontJS',\r\n        score: 280,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import { Component, OnInit } from '@angular/core';\nimport { Questions } from '../data/data-type';\nimport { quizzes } from '../data/examples-quiz';\nimport { ViewEncapsulation } from '@angular/core';\n@Component({\n  selector: 'app-go-quiz',\n  templateUrl: './go-quiz.component.html',\n  styleUrls: ['./go-quiz.component.less'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GoQuizComponent implements OnInit {\n  List: Array<Questions> = quizzes[0].questions;\n  quizMeta = quizzes[0].meta;\n  playActive = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<section class=\"quiz\">\n  <header>\n    <img src=\"{{ quizMeta.image }}\" alt=\"{{ quizMeta.describe }}\" />\n    <div class=\"quiz__describe\">\n      <h1>{{ quizMeta.title }}</h1>\n      created by <span>{{ quizMeta.author }} </span><br />\n      {{ quizMeta.describe }}\n      <br />\n      <button (click)=\"playActive = true\">Play!</button>\n    </div>\n  </header>\n\n  <app-quiz-one *ngIf=\"playActive\"></app-quiz-one>\n</section>\n","import { Quiz } from './../data/data-type';\nimport { quizzes } from './../data/examples-quiz';\nimport { Component, OnInit } from '@angular/core';\nimport { Rating } from './../data/data-type';\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.less'],\n})\nexport class ListComponent implements OnInit {\n  constructor() {}\n  rate = [1, 2, 3, 4, 5];\n  coloring = {\n    easy: 'yellow',\n    medium: 'orange',\n    hard: 'red',\n  };\n  CountRate() {\n    let countIndex = this.List[0].rating.length;\n    let countRate: any = this.List[0].rating.reduce((a, b): any => {\n      return Number(a.rate + b.rate);\n    });\n\n    return Math.ceil(countRate / countIndex);\n  }\n  List: Array<Quiz> = quizzes;\n  ngOnInit(): void {\n    this.CountRate();\n  }\n}\n","<article class=\"article\">\n  <article class=\"article__for\" *ngFor=\"let el of List\">\n    <img src=\"{{ el.meta.image }}\" alt=\"\" />\n    <div class=\"article__describe\">\n      <h1>\n        {{ el.meta.title }}\n        <span style=\"color: rgba(255, 255, 255, 0.25)\"> by </span>\n        <span class=\"article__author\">{{ el.meta.author }}</span>\n      </h1>\n      <span class=\"article__data\">\n        {{ el.meta.date }}\n        <!-- Coloring -->\n        <span\n          *ngIf=\"el.meta.levelDifficulty === 'easy'\"\n          [style.color]=\"coloring.easy\"\n          >easy quiz!</span\n        >\n        <span\n          *ngIf=\"el.meta.levelDifficulty === 'medium'\"\n          [style.color]=\"coloring.medium\"\n          >medium level of difficult</span\n        >\n        <span\n          *ngIf=\"el.meta.levelDifficulty === 'hard'\"\n          [style.color]=\"coloring.hard\"\n          >Demanding quiz!</span\n        >\n        <br />\n        <span *ngFor=\"let r of rate\">\n          <mat-icon [ngStyle]=\"{ color: r - 1 < CountRate() ? 'yellow' : null }\"\n            >star</mat-icon\n          ></span\n        >\n      </span>\n\n      <p>\n        {{ el.meta.describe }}\n        <br />\n      </p>\n\n      <div class=\"article__buttons\">\n        <button\n          [routerLink]=\"['./quiz-one/1']\"\n          routerLinkActive=\"router-link-active\"\n        >\n          Play!</button\n        ><button>See ratings</button><button>Score board</button>\n      </div>\n    </div>\n  </article>\n</article>\n","import { Component, OnInit } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.less'],\n})\nexport class StartComponent implements OnInit {\n  textShadow = '10px 10px 2px rgba(255, 255, 255, 0.158)';\n  constructor() {}\n  move(e: any) {\n    this.textShadow = `${e.clientX / 30}px ${\n      e.clientY / 20\n    }px 2px rgba(255, 255, 255, 0.158)`;\n  }\n  ngOnInit(): void {}\n}\n","<header class=\"header\" (mousemove)=\"move($event)\">\n  <div class=\"header__title\">\n    <span class=\"header__span\" [style.text-shadow]=\"textShadow\">IQ</span>uiz\n  </div>\n  <div class=\"header__buttons\">\n    <button class=\"header__button\">\n      Search Quiz\n      <br />\n      <mat-icon>search</mat-icon></button\n    ><button\n      class=\"header__button\"\n      [routerLink]=\"['./quiz-one/1']\"\n      routerLinkActive=\"router-link-active\"\n    >\n      Quick Quiz\n      <br />\n      <mat-icon>flash_on</mat-icon></button\n    ><button class=\"header__button\" [routerLink]=\"['./creating']\">\n      Create Quiz<br />\n      <mat-icon>create</mat-icon>\n    </button>\n  </div>\n</header>\n<app-list></app-list>\n","import { quizzes } from './../data/examples-quiz';\nimport { ViewEncapsulation } from '@angular/core';\nimport { Questions } from 'src/app/data/data-type';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-quiz-one',\n  templateUrl: './quiz-one.component.html',\n  styleUrls: ['./quiz-one.component.less'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class QuizOneComponent implements OnInit {\n  List: Array<Questions> = quizzes[0].questions;\n  quizMeta = quizzes[0].meta;\n  arrayAnswers: Array<string> = [];\n  arrayCorrect: Array<string> = [];\n  arrayChecking: Array<string | boolean> = [];\n  Counting: number = 0;\n  constructor() {}\n  // PUSH TO ARRAY\n  push(ans: string, i: number) {\n    this.arrayAnswers[i] = ans;\n    // console.log(this.List.length);\n  }\n  // Swap the answers\n  SwapAns() {\n    for (let s = 0; s < this.List.length; s++) {\n      const random1 = Math.floor(Math.random() * 3);\n      const random2 = Math.floor(Math.random() * 3);\n      const swapAns = this.List[s].answers[random1];\n      this.List[s].answers[random1] = this.List[s].answers[random2];\n      this.List[s].answers[random2] = swapAns;\n      console.log(random1, random2);\n    }\n  }\n  // reordering of questions\n\n  Reordering() {\n    this.List = this.List.map((value) => ({ value, sort: Math.random() }))\n      .sort((a, b) => a.sort - b.sort)\n      .map(({ value }) => value);\n  }\n  //Function to create array with good answers\n  correct() {\n    for (let i = 0; i < this.List.length; i++) {\n      const newPush = this.List[i].correct;\n      this.arrayCorrect.push(newPush);\n    }\n    return this.arrayCorrect;\n  }\n  // Check good answers and counting point\n  Check() {\n    this.correct();\n    for (let j = 0; j < this.List.length; j++) {\n      if (this.arrayAnswers[j] === this.arrayCorrect[j]) {\n        this.Counting++;\n      } else {\n        console.log('No! Good answer is ' + this.arrayCorrect[j]);\n      }\n    }\n    console.log('pkt', this.Counting);\n    this.SwapAns();\n  }\n  // Coloring good and bad answer\n  getColor(btn: string, answer: string, correct: string): any {\n    if (btn === correct) {\n      return 'green';\n    }\n    if (btn === answer && btn !== correct && correct !== undefined) {\n      return 'red';\n    }\n    if (btn === answer) {\n      return '#d9008f';\n    }\n  }\n  ngOnInit(): void {\n    // Array with good answers\n    this.Reordering();\n  }\n}\n","<div class=\"quiz__content\">\n  <div\n    class=\"quiz__question\"\n    *ngFor=\"let el of List; let i = index\"\n    [ngStyle]=\"{\n      background: i % 2 === 0 ? 'black' : 'rgb(42 39 42)'\n    }\"\n  >\n    <h1>{{ el.question }}</h1>\n    <img *ngIf=\"el.image\" src=\"{{ el.image }}\" alt=\"\" />\n    <div class=\"quiz__buttons\">\n      <button\n        *ngFor=\"let btn of el.answers\"\n        (click)=\"push(btn, i)\"\n        [ngStyle]=\"{\n          'background-color': getColor(btn, arrayAnswers[i], arrayCorrect[i])\n        }\"\n      >\n        {{ btn }}\n      </button>\n    </div>\n  </div>\n</div>\n<button (click)=\"Check()\">Checking</button>\n<button (click)=\"Reordering()\">Reordering</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nfunction bootstrap() {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n};\n\n\nif (document.readyState === 'complete') {\n  bootstrap();\n} else {\n  document.addEventListener('DOMContentLoaded', bootstrap);\n}\n\n"],"names":[],"sourceRoot":"webpack:///"}